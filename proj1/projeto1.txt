Projeto 1 - implementação de cliente-servidor simples usando sockets.
Linguagem: C
Data de entrega: 4 de maio.
Conteúdo da entrega: código fonte com a implementação especificada e relatório
descrevendo a implementação, as funções utilizadas e mostrando os testes
realizados para validar a implementação.
Em dupla.
Forma de entrega: arquivo comprimido (tar.gz, zip.) via classroom.google.com

- Implemente um cliente e um servidor TCP usando sockets em C. Você pode
  basear-se nos esqueletos abaixo.
- O cliente que se conecta ao servidor deve poder enviar mensagens de texto,
  que são reproduzidas na janela do servidor. O servidor responde com a mesma 
  mensagem, que é então exibida na janela do cliente (eco). O envio e
  recebimento das mensagens podem ser feitos linha a linha.
- O cliente recebe como parâmetro, na linha de comando, o hostname do servidor.
- Seus programas devem emitir mensagens de erro quando necessário (número
  incorreto de argumentos, erro na resolução de nome, erro na alocação do
  socket, erro nas chamadas accept, connect, etc).


Funções úteis:
gethostbyname
socket
connect
bind
listen
accept
send
recv
htons
bcopy
close

**************************
******** Esqueleto 1 *****
**************************
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <netdb.h>

#define SERVER_PORT 12345
#define MAX_LINE 256

int main(int argc, char * argv[])
{
        struct hostent *host_address;
        struct sockaddr_in socket_address;
        char *host;
        char buf[MAX_LINE];
        int s;
        int len;


	/* verificação de argumentos */
	(...)

	/* tradução de nome para endereço IP */
	(...)

        /* criação da estrutura de dados de endereço */
        bzero((char *)&socket_address, sizeof(socket_address));
	(...)

        /* criação de socket ativo*/
	(...)

	/* estabelecimento da conexão */
	(...)

        /* ler e enviar linhas de texto, receber eco */
	(...)

}



**************************
******** Esqueleto 2 *****
**************************
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <netdb.h>

#define LISTEN_PORT 12345
#define MAX_PENDING 5
#define MAX_LINE 256

int main()
{
        struct sockaddr_in socket_address;
        char buf[MAX_LINE];
        unsigned int len;
        int s, new_s;

        /* criação da estrutura de dados de endereço */
        bzero((char *)&socket_address, sizeof(socket_address));
	(...)

        /* criação de socket passivo */
	(...)

	/* Associar socket ao descritor */
	(...)

	/* Criar escuta do socket para aceitar conexões */
	(...)

        /* aguardar/aceita conexão, receber e imprimir texto na tela, enviar eco */
	(...)
}
